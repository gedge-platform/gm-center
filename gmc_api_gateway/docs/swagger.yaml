basePath: /gmcapi/v2
definitions:
  model.ADDRESSES:
    properties:
      address:
        type: string
      type:
        type: string
    type: object
  model.Active:
    properties:
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
    type: object
  model.CEPH:
    properties:
      capacity:
        $ref: '#/definitions/model.Capacity'
      clientPerformance:
        $ref: '#/definitions/model.ClientPerformance'
      clusterStatus:
        type: number
      hostNum:
        type: integer
      monitor:
        $ref: '#/definitions/model.Monitor'
      object:
        $ref: '#/definitions/model.Object'
      osd:
        $ref: '#/definitions/model.OSD'
      pgStatus: {}
      pgs_per_osd:
        type: number
      poolNum:
        type: integer
    type: object
  model.CLOUD_DASHBOARD:
    properties:
      ClusterInfo: {}
      cpuTotal: {}
      cpuUsage: {}
      cpuUtil: {}
      diskTotal: {}
      diskUsage: {}
      diskUtil: {}
      memoryTotal: {}
      memoryUsage: {}
      memoryUtil: {}
      nodeInfo: {}
      nodeRunning: {}
      resourceCnt: {}
    type: object
  model.CLUSTER:
    properties:
      address:
        type: string
      cloudType:
        type: string
      clusterEndpoint:
        type: string
      clusterName:
        type: string
      clusterType:
        type: string
      created_at:
        type: string
      gpuCnt:
        description: |-
          Status                  string                   `json:"status"`
          Network                 string                   `json:"network"`
        type: integer
      nodeCnt:
        type: integer
      point: {}
      resourceUsage:
        description: Gpu           []map[string]interface{} `json:"gpu,omitempty"`
      status:
        type: string
      token:
        type: string
    required:
    - clusterEndpoint
    - clusterName
    - clusterType
    - token
    type: object
  model.CLUSTER_DETAIL:
    properties:
      address:
        type: string
      cloudType:
        type: string
      clusterEndpoint:
        type: string
      clusterName:
        type: string
      clusterType:
        type: string
      created_at:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      gpu:
        items:
          additionalProperties: true
          type: object
        type: array
      nodes:
        items:
          $ref: '#/definitions/model.NODE'
        type: array
      point: {}
      resource: {}
      status:
        type: string
      token:
        type: string
    required:
    - clusterEndpoint
    - clusterName
    - clusterType
    - token
    type: object
  model.CLUSTERROLE:
    properties:
      annotations: {}
      cluster:
        type: string
      createAt:
        type: string
      label: {}
      name:
        type: string
      rules: {}
      user:
        type: string
      workspace:
        type: string
    type: object
  model.CLUSTERROLEBINDING:
    properties:
      annotations: {}
      cluster:
        type: string
      createAt:
        type: string
      labels: {}
      name:
        type: string
      roleRef: {}
      subjects: {}
      user:
        type: string
      workspace:
        type: string
    type: object
  model.CONFIGMAP:
    properties:
      annotations: {}
      cluster:
        type: string
      createAt:
        type: string
      data: {}
      dataCnt:
        type: integer
      name:
        type: string
      namespace:
        type: string
      user:
        type: string
      workspace:
        type: string
    type: object
  model.CRONJOB:
    properties:
      active:
        items:
          $ref: '#/definitions/model.Active'
        type: array
      annotations: {}
      cluster:
        type: string
      concurrencyPolicy:
        type: string
      containers:
        items:
          $ref: '#/definitions/model.Containers'
        type: array
      creationTimestamp:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      failedJobsHistoryLimit:
        type: integer
      label: {}
      lastScheduleTime:
        type: string
      name:
        type: string
      project:
        type: string
      schedule:
        type: string
      successfulJobsHistoryLimit:
        type: integer
      user:
        type: string
      workspace:
        type: string
    type: object
  model.Capacity:
    properties:
      available:
        type: number
      total:
        type: number
      used:
        type: number
    type: object
  model.ClientPerformance:
    properties:
      read_bytes_sec:
        type: number
      read_op_per_sec:
        type: number
      write_bytes_sec:
        type: number
      write_op_per_sec:
        type: number
    type: object
  model.Cluster:
    properties:
      address:
        type: string
      cloudType:
        type: string
      clusterEndpoint:
        type: string
      clusterName:
        type: string
      clusterType:
        type: string
      created_at:
        type: string
      point: {}
      status:
        type: string
      token:
        type: string
    required:
    - clusterEndpoint
    - clusterName
    - clusterType
    - token
    type: object
  model.Conditions:
    properties:
      lastProbeTime:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  model.ConfigMapKeyRef:
    properties:
      key:
        type: string
      name:
        type: string
    type: object
  model.ContainerStatuses:
    properties:
      containerID:
        type: string
      image:
        type: string
      name:
        type: string
      ready:
        type: boolean
      restartCount:
        type: integer
      started:
        type: boolean
    type: object
  model.Containers:
    properties:
      image:
        type: string
      name:
        type: string
    type: object
  model.Credential:
    properties:
      ClientId:
        type: string
      ClientSecret:
        type: string
      CredentialName:
        type: string
      DomainName:
        type: string
      IdentityEndpoint:
        type: string
      KeyPair:
        type: string
      Password:
        type: string
      ProjectID:
        type: string
      ProviderName:
        type: string
      Region:
        type: string
      Username:
        type: string
      Zone:
        type: string
      created_at:
        type: string
    type: object
  model.DAEMONSET_DETAIL:
    properties:
      NodeSelector: {}
      annotations: {}
      cluster:
        type: string
      containers: {}
      createAt:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      label: {}
      name:
        type: string
      project:
        type: string
      ready:
        type: string
      status: {}
      strategy: {}
      user:
        type: string
      workspace:
        type: string
    type: object
  model.DBWorkspace:
    properties:
      created_at:
        type: string
      memberName:
        type: string
      objectId:
        type: string
      selectCluster:
        items:
          $ref: '#/definitions/model.Cluster'
        type: array
      workspaceDescription:
        type: string
      workspaceName:
        type: string
    required:
    - memberName
    - workspaceDescription
    - workspaceName
    type: object
  model.DEPLOYMENT_DETAIL:
    properties:
      NodeSelector: {}
      annotations: {}
      cluster:
        type: string
      containers: {}
      createAt:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      labels: {}
      name:
        type: string
      project:
        type: string
      ready:
        type: string
      replica:
        $ref: '#/definitions/model.REPLICA'
      strategy: {}
      updateAt:
        type: string
      user:
        type: string
      workspace:
        type: string
    type: object
  model.ENV:
    properties:
      name:
        type: string
      value:
        type: string
      valueFrom:
        $ref: '#/definitions/model.ValueFrom'
    type: object
  model.EVENT:
    properties:
      cluster:
        type: string
      eventTime:
        type: string
      kind:
        type: string
      message:
        type: string
      name:
        type: string
      namespace:
        type: string
      reason:
        type: string
      type:
        type: string
    type: object
  model.Error:
    properties:
      data:
        description: Email    string `json:"email"`
        type: string
      status:
        type: string
    type: object
  model.FieldRef:
    properties:
      apiVersion:
        type: string
      fieldPath:
        type: string
    type: object
  model.JOB:
    properties:
      cluster:
        type: string
      completions:
        type: string
      created_at:
        type: string
      duration: {}
      name:
        type: string
      project:
        type: string
      user:
        type: string
      workspace:
        type: string
    type: object
  model.JOB_DETAIL:
    properties:
      annotations: {}
      backoffLimit:
        type: integer
      cluster:
        type: string
      completionTime:
        type: string
      completions:
        type: string
      conditions:
        description: OwnerReference []OwnerReference `json:"ownerReferences,omitempty"`
        items:
          $ref: '#/definitions/model.Conditions'
        type: array
      containers: {}
      created_at:
        type: string
      duration: {}
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      label: {}
      name:
        type: string
      parallelism:
        type: integer
      project:
        type: string
      startTime:
        type: string
      status:
        type: integer
      user:
        type: string
      volume:
        type: integer
      workspace:
        type: string
    type: object
  model.Member:
    properties:
      contact:
        type: string
      created_at:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      logined_at:
        type: string
      memberId:
        type: string
      memberName:
        type: string
      memberRole:
        type: string
      objectId:
        type: string
      password:
        maxLength: 10
        minLength: 0
        type: string
    required:
    - email
    - memberId
    - memberName
    - password
    type: object
  model.Monitor:
    properties:
      quorum: {}
      total:
        type: integer
    type: object
  model.NODE:
    properties:
      addresses:
        items:
          $ref: '#/definitions/model.ADDRESSES'
        type: array
      allocatable: {}
      annotations: {}
      capacity: {}
      containerRuntimeVersion: {}
      created_at:
        type: string
      kernel:
        type: string
      kubeVersion:
        type: string
      labels: {}
      name:
        type: string
      nodeIP:
        type: string
      os:
        type: string
      type:
        type: string
    type: object
  model.OSD:
    properties:
      in:
        type: integer
      total:
        type: integer
      up:
        type: integer
    type: object
  model.Object:
    properties:
      degraded:
        type: number
      healthy:
        type: number
      misplaced:
        type: number
      unfound:
        type: number
    type: object
  model.OwnerReference:
    properties:
      apiVersion:
        type: string
      kind:
        type: string
      name:
        type: string
    type: object
  model.POD:
    properties:
      Podcontainers:
        items:
          $ref: '#/definitions/model.PODCONTAINERS'
        type: array
      annotations: {}
      cluster:
        type: string
      containerStatuses:
        description: VolumeMounts      []VolumeMounts      `json:"volumemounts"`
        items:
          $ref: '#/definitions/model.ContainerStatuses'
        type: array
      creationTimestamp:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      hostIP:
        type: string
      label: {}
      name:
        type: string
      node_name:
        type: string
      ownerReferences:
        items:
          $ref: '#/definitions/model.OwnerReference'
        type: array
      podIP:
        type: string
      podIPs:
        items:
          $ref: '#/definitions/model.PodIPs'
        type: array
      project:
        type: string
      qosClass:
        type: string
      restart:
        type: integer
      status:
        type: string
      statusConditions:
        items:
          $ref: '#/definitions/model.StatusConditions'
        type: array
      user:
        type: string
      workspace:
        type: string
    type: object
  model.PODCONTAINERS:
    properties:
      env:
        items:
          $ref: '#/definitions/model.ENV'
        type: array
      image:
        type: string
      name:
        type: string
      ports:
        description: |-
          ReadinessProbe ReadinessProbe `json:"readinessProbe",omitempty`
          LivenessProbe  LivenessProbe  `json:"livenessProbe",omitempty`
        items:
          $ref: '#/definitions/model.Ports'
        type: array
      volumemounts:
        items:
          $ref: '#/definitions/model.VolumeMounts'
        type: array
    type: object
  model.PROJECT_DETAIL:
    properties:
      Name:
        type: string
      annotations: {}
      clusterName:
        description: Project
        type: string
      created_at:
        type: string
      labels: {}
      resource:
        additionalProperties: true
        type: object
      resourceUsage: {}
      status:
        type: string
    type: object
  model.PV:
    properties:
      accessMode:
        items:
          type: string
        type: array
      annotations: {}
      capacity:
        type: string
      claim: {}
      cluster:
        type: string
      createAt:
        description: Workspace string `json:"workspace"`
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      label: {}
      name:
        type: string
      reclaimPolicy:
        type: string
      status: {}
      storageClass:
        type: string
      user:
        type: string
      volumeMode:
        description: Reason        []EVENT          `json:"events"`
        type: string
    type: object
  model.PVC:
    properties:
      accessMode:
        items:
          type: string
        type: array
      annotations: {}
      capacity:
        type: string
      clusterName:
        type: string
      createAt:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      finalizers:
        items:
          type: string
        type: array
      label:
        description: Reason        []EVENT          `json:"events"`
      name:
        type: string
      namespace:
        type: string
      status: {}
      storageClass:
        type: string
      user:
        type: string
      volume: {}
      workspaceName:
        type: string
    type: object
  model.PodIPs:
    properties:
      ip:
        type: string
    type: object
  model.Ports:
    properties:
      containerPort:
        type: integer
      name:
        type: string
      port:
        type: integer
      protocol:
        type: string
    type: object
  model.REPLICA:
    properties:
      availableReplicas:
        type: integer
      readyReplicas:
        type: integer
      replicas:
        type: integer
      unavailableReplicas:
        type: integer
      updatedReplicas:
        type: integer
    type: object
  model.ROLE:
    properties:
      annotations: {}
      cluster:
        type: string
      createAt:
        type: string
      label: {}
      name:
        type: string
      project:
        type: string
      rules: {}
      user:
        type: string
      workspace:
        type: string
    type: object
  model.SECRET:
    properties:
      annotations: {}
      clusterName:
        type: string
      createAt:
        type: string
      data: {}
      dataCnt:
        type: integer
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      label: {}
      name:
        type: string
      namespace:
        type: string
      ownerReferences: {}
      type:
        type: string
      user:
        type: string
      workspaceName:
        type: string
    type: object
  model.SERVICE:
    properties:
      annotation: {}
      cluster:
        type: string
      clusterIp:
        type: string
      createAt:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      externalIp:
        type: string
      label: {}
      name:
        type: string
      port: {}
      project:
        type: string
      selector: {}
      sessionAffinity:
        type: string
      type:
        type: string
      user:
        type: string
      workspace:
        type: string
    type: object
  model.SERVICE_DASHBOARD:
    properties:
      podCpuTop5: {}
      podMemTop5: {}
      projectCnt:
        type: integer
      projectCpuTop5: {}
      projectList: {}
      projectMemTop5: {}
      resource: {}
      workspaceCnt:
        type: integer
    type: object
  model.SERVICEACCOUNT:
    properties:
      annotations: {}
      cluster:
        type: string
      createAt:
        type: string
      label: {}
      name:
        type: string
      namespace:
        type: string
      secretCnt:
        type: integer
      secrets: {}
      user:
        type: string
      workspace:
        type: string
    type: object
  model.STATEFULSET_DETAIL:
    properties:
      NodeSelector: {}
      annotations: {}
      cluster:
        type: string
      containers: {}
      createAt:
        type: string
      events:
        items:
          $ref: '#/definitions/model.EVENT'
        type: array
      label: {}
      name:
        type: string
      ownerReferences: {}
      project:
        type: string
      ready:
        type: string
      status: {}
      user:
        type: string
      workspace:
        type: string
    type: object
  model.STORAGECLASS:
    properties:
      allowVolumeExpansion:
        type: string
      annotations: {}
      cluster:
        type: string
      createAt:
        type: string
      labels: {}
      name:
        type: string
      parameters: {}
      provisioner:
        type: string
      reclaimPolicy:
        type: string
      user:
        type: string
      volumeBindingMode:
        type: string
      workspace:
        type: string
    type: object
  model.SYSTEMPROJECT:
    properties:
      DetailInfo:
        $ref: '#/definitions/model.PROJECT_DETAIL'
      clusterName:
        type: string
      created_at:
        type: string
      events: {}
      projectName:
        type: string
      status:
        type: string
    type: object
  model.StatusConditions:
    properties:
      lastTransitionTime:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  model.TOTAL_DASHBOARD:
    properties:
      clusterCnt:
        type: integer
      clusterCpuTop5: {}
      clusterMemTop5: {}
      coreClusterCnt:
        type: integer
      credentialCnt:
        type: integer
      edgeClusterCnt:
        type: integer
      edgeInfo: {}
      podCpuTop5: {}
      podMemTop5: {}
      projectCnt:
        type: integer
      workspaceCnt:
        type: integer
    type: object
  model.USERPROJECT:
    properties:
      DetailInfo:
        description: Status        string           `json:"status,omitempty"`
        items:
          $ref: '#/definitions/model.PROJECT_DETAIL'
        type: array
      created_at:
        type: string
      events: {}
      istioCheck:
        type: string
      memberName:
        description: |-
          Owner         primitive.ObjectID `json:"projectOwner,omitempty" bson:"projectOwner"`
          Creator       primitive.ObjectID `json:"projectCreator,omitempty" bson:"projectCreator"`
        type: string
      objectId:
        type: string
      projectDescription:
        type: string
      projectName:
        type: string
      projectType:
        type: string
      selectCluster:
        items:
          $ref: '#/definitions/model.Cluster'
        type: array
      workspace:
        $ref: '#/definitions/model.DBWorkspace'
    required:
    - memberName
    - projectDescription
    - projectName
    - projectType
    type: object
  model.User:
    properties:
      Id:
        type: string
      Password:
        description: Email    string `json:"email"`
        type: string
    type: object
  model.ValueFrom:
    properties:
      configMapKeyRef:
        $ref: '#/definitions/model.ConfigMapKeyRef'
      fieldRef:
        $ref: '#/definitions/model.FieldRef'
    type: object
  model.VolumeMounts:
    properties:
      mountpath:
        type: string
      name:
        type: string
      readonly:
        type: boolean
    type: object
  model.WORKLOAD:
    properties:
      NodeSelector: {}
      cluster:
        type: string
      createAt:
        type: string
      name:
        type: string
      project:
        type: string
      ready:
        type: string
      user:
        type: string
      workspace:
        type: string
    type: object
  model.Workspace:
    properties:
      clusterName:
        items:
          type: string
        type: array
      created_at:
        description: Selectcluster []WorkspaceClusters `json:"selectCluster,omitempty"
          bson:"selectCluster"`
        type: string
      memberName:
        type: string
      workspaceDescription:
        type: string
      workspaceName:
        type: string
    required:
    - memberName
    - workspaceDescription
    - workspaceName
    type: object
host: 101.79.1.138:8012
info:
  contact:
    name: GM-Center
    url: https://gedge-platform.github.io/gm-center/
  description: This is a Gedge GM-Center Swagger API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Gedge GM-Center Swagger API
  version: "2.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: get JWT token
      parameters:
      - description: User Info Body
        in: body
        name: authBody
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/model.User'
      summary: Login
      tags:
      - Login
  /ceph/monit:
    get:
      consumes:
      - application/json
      description: get Ceph Dashboard info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CEPH'
      security:
      - Bearer: []
      summary: Show Ceph Dashboard info
      tags:
      - Ceph
  /cloudDashboard:
    get:
      consumes:
      - application/json
      description: get TotalDashboard info
      parameters:
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLOUD_DASHBOARD'
      security:
      - Bearer: []
      summary: Show TotalDashboard
      tags:
      - Dashboard
  /clusterrolebindings:
    get:
      consumes:
      - application/json
      description: get clusterrolebinding List
      parameters:
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTERROLEBINDING'
      security:
      - Bearer: []
      summary: Show List clusterrolebinding
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create ClusterRolebinding
      parameters:
      - description: ClusterRolebinding Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTERROLEBINDING'
      security:
      - Bearer: []
      summary: Create ClusterRolebinding
      tags:
      - Kubernetes
  /clusterrolebindings/{name}:
    delete:
      consumes:
      - application/json
      description: Delete ClusterRolebinding
      parameters:
      - description: name of the ClusterRolebinding
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete ClusterRolebinding
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get clusterrolebinding Details
      parameters:
      - description: name of the Clusterrolebinding
        in: path
        name: name
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTERROLEBINDING'
      security:
      - Bearer: []
      summary: Show detail clusterrolebinding
      tags:
      - Kubernetes
  /clusterroles:
    get:
      consumes:
      - application/json
      description: get Clusterroles List
      parameters:
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTERROLE'
      security:
      - Bearer: []
      summary: Show List Clusterroles
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Clusterrole
      parameters:
      - description: Clusterrole Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTERROLE'
      security:
      - Bearer: []
      summary: Create Clusterrole
      tags:
      - Kubernetes
  /clusterroles/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Clusterrole
      parameters:
      - description: name of the Clusterrole
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Clusterrole
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Clusterroles Details
      parameters:
      - description: name of the Clusterroles
        in: path
        name: name
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTERROLE'
      security:
      - Bearer: []
      summary: Show detail Clusterroles
      tags:
      - Kubernetes
  /clusters:
    get:
      consumes:
      - application/json
      description: get cluster List
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTER'
      security:
      - Bearer: []
      summary: Show List cluster
      tags:
      - Cluster
    post:
      consumes:
      - application/json
      description: Create Cluster
      parameters:
      - description: Cluster Info Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Cluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/model.Cluster'
      security:
      - Bearer: []
      summary: Create Cluster
      tags:
      - Cluster
  /clusters/{name}:
    delete:
      consumes:
      - application/json
      description: delete Cluster
      parameters:
      - description: Name of the cluster
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Delete Cluster
      tags:
      - Cluster
    get:
      consumes:
      - application/json
      description: get cluster Details
      parameters:
      - description: name of the Cluster
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CLUSTER_DETAIL'
      security:
      - Bearer: []
      summary: Show detail cluster
      tags:
      - Cluster
  /configmaps:
    get:
      consumes:
      - application/json
      description: get Configmap List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CONFIGMAP'
      security:
      - Bearer: []
      summary: Show List Configmap
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Configmap
      parameters:
      - description: Configmap Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CONFIGMAP'
      security:
      - Bearer: []
      summary: Create Configmap
      tags:
      - Kubernetes
  /configmaps/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Configmap
      parameters:
      - description: name of the Configmap
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Configmap
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Configmap Details
      parameters:
      - description: name of the Configmap
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CONFIGMAP'
      security:
      - Bearer: []
      summary: Show detail Configmap
      tags:
      - Kubernetes
  /credentials:
    get:
      consumes:
      - application/json
      description: get credential List
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Credential'
      security:
      - Bearer: []
      summary: Show List credential
      tags:
      - Credential
  /cronjobs:
    get:
      consumes:
      - application/json
      description: get Cronjob List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CRONJOB'
      security:
      - Bearer: []
      summary: Show List Cronjob
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Cronjob
      parameters:
      - description: Cronjob Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CRONJOB'
      security:
      - Bearer: []
      summary: Create Cronjob
      tags:
      - Kubernetes
  /cronjobs/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Cronjob
      parameters:
      - description: name of the Cronjob
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Cronjob
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Cronjob Details
      parameters:
      - description: name of the Cronjob
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CRONJOB'
      security:
      - Bearer: []
      summary: Show detail Cronjob
      tags:
      - Kubernetes
  /daemonsets:
    get:
      consumes:
      - application/json
      description: get Daemonset List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Show List Daemonset
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Daemonset
      parameters:
      - description: Daemonset Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Create Daemonset
      tags:
      - Kubernetes
  /daemonsets/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Daemonset
      parameters:
      - description: name of the Daemonset
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Daemonset
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Daemonset Details
      parameters:
      - description: name of the Daemonset
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DAEMONSET_DETAIL'
      security:
      - Bearer: []
      summary: Show detail Daemonset
      tags:
      - Kubernetes
  /deployments:
    get:
      consumes:
      - application/json
      description: get Deployment List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Show List Deployment
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Deployment
      parameters:
      - description: Deployment Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Create Deployment
      tags:
      - Kubernetes
  /deployments/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Deployment
      parameters:
      - description: name of the Deployment
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Deployment
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Deployment Details
      parameters:
      - description: name of the Deployment
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DEPLOYMENT_DETAIL'
      security:
      - Bearer: []
      summary: Show detail Deployment
      tags:
      - Kubernetes
  /jobs:
    get:
      consumes:
      - application/json
      description: get Job List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.JOB'
      security:
      - Bearer: []
      summary: Show List Job
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Job
      parameters:
      - description: Job Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.JOB'
      security:
      - Bearer: []
      summary: Create Job
      tags:
      - Kubernetes
  /jobs/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Job
      parameters:
      - description: name of the Job
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Job
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Job Details
      parameters:
      - description: name of the Job
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.JOB_DETAIL'
      security:
      - Bearer: []
      summary: Show detail Job
      tags:
      - Kubernetes
  /members:
    get:
      consumes:
      - application/json
      description: get Member List
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Member'
      security:
      - Bearer: []
      summary: Show List Member
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create Member
      parameters:
      - description: Cluster Info Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Member'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/model.Member'
      security:
      - Bearer: []
      summary: Create Member
      tags:
      - User
  /members/{name}:
    delete:
      consumes:
      - application/json
      description: delete User
      parameters:
      - description: Name of the User
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: get Member Details
      parameters:
      - description: name of the Member
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Show detail Member
      tags:
      - User
  /pods:
    get:
      consumes:
      - application/json
      description: get Pod List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.POD'
      security:
      - Bearer: []
      summary: Show List Pod
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Pod
      parameters:
      - description: Pod Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.POD'
      security:
      - Bearer: []
      summary: Create Pod
      tags:
      - Kubernetes
  /pods/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Pod
      parameters:
      - description: name of the Pod
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Pod
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Pod Details
      parameters:
      - description: name of the Pod
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.POD'
      security:
      - Bearer: []
      summary: Show detail Pod
      tags:
      - Kubernetes
  /projects:
    post:
      consumes:
      - application/json
      description: Create userProject
      parameters:
      - description: UserProject Info Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.USERPROJECT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/model.USERPROJECT'
      security:
      - Bearer: []
      summary: Create userProject
      tags:
      - Project
  /pvcs:
    get:
      consumes:
      - application/json
      description: get PVC List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PVC'
      security:
      - Bearer: []
      summary: Show List PVC
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create PVC
      parameters:
      - description: PVC Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PVC'
      security:
      - Bearer: []
      summary: Create PVC
      tags:
      - Kubernetes
  /pvcs/{name}:
    delete:
      consumes:
      - application/json
      description: Delete PVC
      parameters:
      - description: name of the PVC
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete PVC
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get PVC Details
      parameters:
      - description: name of the PVC
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PVC'
      security:
      - Bearer: []
      summary: Show detail PVC
      tags:
      - Kubernetes
  /pvs:
    get:
      consumes:
      - application/json
      description: get PV List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PV'
      security:
      - Bearer: []
      summary: Show List PV
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create PV
      parameters:
      - description: PV Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PV'
      security:
      - Bearer: []
      summary: Create PV
      tags:
      - Kubernetes
  /pvs/{name}:
    delete:
      consumes:
      - application/json
      description: Delete PV
      parameters:
      - description: name of the PV
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete PV
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get PV Details
      parameters:
      - description: name of the PV
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PV'
      security:
      - Bearer: []
      summary: Show detail PV
      tags:
      - Kubernetes
  /roles:
    get:
      consumes:
      - application/json
      description: get Role List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ROLE'
      security:
      - Bearer: []
      summary: Show List Role
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Role
      parameters:
      - description: Role Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ROLE'
      security:
      - Bearer: []
      summary: Create Role
      tags:
      - Kubernetes
  /roles/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Role
      parameters:
      - description: name of the Role
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Role
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Role Details
      parameters:
      - description: name of the Role
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ROLE'
      security:
      - Bearer: []
      summary: Show detail Role
      tags:
      - Kubernetes
  /secrets:
    get:
      consumes:
      - application/json
      description: get Secret List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SECRET'
      security:
      - Bearer: []
      summary: Show List Secret
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Secret
      parameters:
      - description: Secret Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SECRET'
      security:
      - Bearer: []
      summary: Create Secret
      tags:
      - Kubernetes
  /secrets/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Secret
      parameters:
      - description: name of the Secret
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Secret
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Secret Details
      parameters:
      - description: name of the Secret
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SECRET'
      security:
      - Bearer: []
      summary: Show detail Secret
      tags:
      - Kubernetes
  /serviceDashboard:
    get:
      consumes:
      - application/json
      description: get ServiceDashboard info
      parameters:
      - description: name of the User
        in: query
        name: user
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SERVICE_DASHBOARD'
      security:
      - Bearer: []
      summary: Show ServiceDashboard
      tags:
      - Dashboard
  /serviceaccounts:
    get:
      consumes:
      - application/json
      description: get ServiceAccount List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SERVICEACCOUNT'
      security:
      - Bearer: []
      summary: Show List ServiceAccount
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create ServiceAccount
      parameters:
      - description: ServiceAccount Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SERVICEACCOUNT'
      security:
      - Bearer: []
      summary: Create ServiceAccount
      tags:
      - Kubernetes
  /serviceaccounts/{name}:
    delete:
      consumes:
      - application/json
      description: Delete ServiceAccount
      parameters:
      - description: name of the ServiceAccount
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete ServiceAccount
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get ServiceAccount Details
      parameters:
      - description: name of the ServiceAccount
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SERVICEACCOUNT'
      security:
      - Bearer: []
      summary: Show detail ServiceAccount
      tags:
      - Kubernetes
  /services:
    get:
      consumes:
      - application/json
      description: get Service List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SERVICE'
      security:
      - Bearer: []
      summary: Show List Service
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Service
      parameters:
      - description: Service Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: cluster Name of the Service
        in: query
        name: cluster
        required: true
        type: string
      - description: project Name of the Service
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/model.SERVICE'
      security:
      - Bearer: []
      summary: Create Service
      tags:
      - Kubernetes
  /services/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Service
      parameters:
      - description: name of the Service
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Service
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Service Details
      parameters:
      - description: name of the Service
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SERVICE'
      security:
      - Bearer: []
      summary: Show detail Service
      tags:
      - Kubernetes
  /spider/cloudos:
    get:
      consumes:
      - application/json
      description: get CloudOS
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Cloudos
      tags:
      - VM
  /spider/credentials:
    get:
      consumes:
      - application/json
      description: get ALLCredential
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Credential'
      security:
      - Bearer: []
      summary: Credential
      tags:
      - VM
    post:
      consumes:
      - application/json
      description: get Credential
      parameters:
      - description: Credential Info Body
        in: body
        name: CredentialBody
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Credential
      tags:
      - VM
  /spider/credentials/{credentialName}:
    delete:
      consumes:
      - application/json
      description: get Credential
      parameters:
      - description: Name of the credentials
        in: path
        name: credentialName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Credential
      tags:
      - VM
    get:
      consumes:
      - application/json
      description: get Credential
      parameters:
      - description: Name of the credentials
        in: path
        name: credentialName
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Credential
      tags:
      - VM
  /statefulsets:
    get:
      consumes:
      - application/json
      description: get Statefulset List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Show List Statefulset
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create Statefulset
      parameters:
      - description: Statefulset Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Create Statefulset
      tags:
      - Kubernetes
  /statefulsets/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Statefulset
      parameters:
      - description: name of the Statefulset
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Statefulset
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get Statefulset Details
      parameters:
      - description: name of the Statefulset
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.STATEFULSET_DETAIL'
      security:
      - Bearer: []
      summary: Show detail Statefulset
      tags:
      - Kubernetes
  /storageclasses:
    get:
      consumes:
      - application/json
      description: get StorageClass List
      parameters:
      - description: name of the Workspace
        in: query
        name: workspace
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        type: string
      - description: name of the Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.STORAGECLASS'
      security:
      - Bearer: []
      summary: Show List StorageClass
      tags:
      - Kubernetes
    post:
      consumes:
      - application/json
      description: Create StorageClass
      parameters:
      - description: StorageClass Info Body
        in: body
        name: json
        required: true
        schema:
          type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WORKLOAD'
      security:
      - Bearer: []
      summary: Create StorageClass
      tags:
      - Kubernetes
  /storageclasses/{name}:
    delete:
      consumes:
      - application/json
      description: Delete StorageClass
      parameters:
      - description: name of the StorageClass
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete StorageClass
      tags:
      - Kubernetes
    get:
      consumes:
      - application/json
      description: get StorageClass Details
      parameters:
      - description: name of the StorageClass
        in: path
        name: name
        required: true
        type: string
      - description: name of the Workspace
        in: query
        name: workspace
        required: true
        type: string
      - description: name of the Cluster
        in: query
        name: cluster
        required: true
        type: string
      - description: name of the Project
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.STORAGECLASS'
      security:
      - Bearer: []
      summary: Show detail StorageClass
      tags:
      - Kubernetes
  /systemProjects:
    get:
      consumes:
      - application/json
      description: get systemProject List
      parameters:
      - description: User Name of the Project Owner
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SYSTEMPROJECT'
      security:
      - Bearer: []
      summary: Show List systemProject
      tags:
      - Project
  /systemProjects/{name}:
    get:
      consumes:
      - application/json
      description: get systemProject Details
      parameters:
      - description: name of the systemProject
        in: path
        name: name
        required: true
        type: string
      - description: cluster Name of the systemProject
        in: query
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Show detail systemProject
      tags:
      - Project
  /totalDashboard:
    get:
      consumes:
      - application/json
      description: get TotalDashboard info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TOTAL_DASHBOARD'
      security:
      - Bearer: []
      summary: Show TotalDashboard
      tags:
      - Dashboard
  /userProjects:
    get:
      consumes:
      - application/json
      description: get userProject List
      parameters:
      - description: User Name of the Project Owner
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.USERPROJECT'
      security:
      - Bearer: []
      summary: Show List userProject
      tags:
      - Project
  /userProjects/{name}:
    delete:
      consumes:
      - application/json
      description: delete userProjects
      parameters:
      - description: name of the userProjects
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: delete userProjects
      tags:
      - Project
    get:
      consumes:
      - application/json
      description: get userProject Details
      parameters:
      - description: name of the userProject
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Show detail userProject
      tags:
      - Project
  /workspaces:
    get:
      consumes:
      - application/json
      description: get workspace List
      parameters:
      - description: user name of the workspace Owner
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
      security:
      - Bearer: []
      summary: Show List workspace
      tags:
      - Workspace
    post:
      consumes:
      - application/json
      description: Create workspace
      parameters:
      - description: workspace Info Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/model.Workspace'
      security:
      - Bearer: []
      summary: Create workspace
      tags:
      - Workspace
  /workspaces/{name}:
    delete:
      consumes:
      - application/json
      description: delete Workspace
      parameters:
      - description: Name of the workspaces
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Delete Workspace
      tags:
      - Workspace
    get:
      consumes:
      - application/json
      description: get workspace Details
      parameters:
      - description: name of the workspace
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Show detail workspace
      tags:
      - Workspace
schemes:
- http
securityDefinitions:
  Bearer:
    description: '"Type \"Bearer \" and then your API Token"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
